{"version":3,"file":"static/js/703.42bde016.chunk.js","mappings":"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","sources":["components/Chart/ChartLine.js","components/ThirdWidget/ThirdWidget.js","pages/Third.js"],"sourcesContent":["import React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Tooltip,\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Tooltip\n);\n\nexport const ChartLine = ({ userData }) => {\n  const [signal, setSignal] = useState([]);\n  const [label, setLabel] = useState([]);\n\n  useEffect(() => {\n    function getSignal() {\n      const data = userData;\n      setSignal(data.map(item => item));\n      setLabel(data.map((elem, index) => index));\n    }\n\n    setTimeout(() => {\n      getSignal();\n    }, 10000);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const data = {\n    labels: label.map(item => item),\n    datasets: [\n      {\n        label: 'Signal',\n        data: signal.map(item => item),\n        borderColor: 'red',\n        pointBorderWidth: 0,\n        pointBackgroundColor: 'transparent',\n        borderWidth: 0.3,\n        tension: 0.5,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {},\n    gridLines: false,\n    scales: {\n      x: {\n        display: false,\n      },\n      y: {\n        display: false,\n      },\n    },\n  };\n\n  return (\n    <>{signal.length > 1 && <Line data={data} options={options}></Line>}</>\n  );\n};\n","import { useState } from 'react';\nimport { BiLogOut, BiBookHeart } from 'react-icons/bi';\nimport { CountNum } from 'components/CountNum/CountNum';\nimport { CircleTimer } from 'components/CircleTimer/CircleTimer';\nimport { ChartLine } from 'components/Chart/ChartLine';\nimport {\n  BloodPressure,\n  dummySignal,\n  dummyHeartRate,\n  rhythmTitle,\n} from 'lib/data/measurementData';\n\nexport const ThirdWidget = () => {\n  const [userReady, setUserReady] = useState(false);\n  const [diastolic, setDiastolic] = useState(0);\n  const [systolic, setSystolic] = useState(0);\n  const [bpm, setBpm] = useState(0);\n  const [rhythm, setRhythm] = useState('');\n  const [showTopMenu, setShowTopMenu] = useState(true);\n\n  function handleClick() {\n    setUserReady(true);\n    setShowTopMenu(false);\n    setTimeout(() => {\n      setBpm(dummyHeartRate.result);\n      setDiastolic(BloodPressure.diastolic);\n      setSystolic(BloodPressure.systolic);\n      getRhythmTitle();\n      setShowTopMenu(true);\n    }, 10500);\n  }\n\n  function getRhythmTitle() {\n    setTimeout(() => {\n      setRhythm(rhythmTitle(dummyHeartRate.result));\n    }, 5000);\n  }\n\n  return (\n    <div className=\"w-360 h-640 grid place-items-center m-1 p-4  border border-solid border-amber-300/75 rounded bg-white\">\n      {showTopMenu && (\n        <div className=\"w-full flex justify-between pb-2 border-b-2\">\n          <BiLogOut size=\"30px\" color=\"#5b21b6\" />\n          <BiBookHeart size=\"30px\" color=\"#5b21b6\" />\n        </div>\n      )}\n      <div className=\"w-56 h-56 flex justify-center items-center mx-auto border rounded-full text-3xl text-indigo-900 bg-violet-300\">\n        {rhythm.length > 1 ? (\n          <></>\n        ) : (\n          <CircleTimer isReady={userReady} circle={200} />\n        )}\n        {rhythm.length > 1 && (\n          <div className=\"grid place-items-center text-2xl\">\n            <p>Your result is:</p>\n            <b>{rhythm}</b>\n          </div>\n        )}\n      </div>\n      {userReady === true ? (\n        <></>\n      ) : (\n        <button\n          type=\"button\"\n          onClick={handleClick}\n          className=\"w-36 h-12 my-12  bg-teal-400 text-indigo-900 text-lg border-2 border-violet-300 rounded-full\"\n        >\n          click for start\n        </button>\n      )}\n      {bpm > 1 ? (\n        <></>\n      ) : (\n        <p className=\" text-center text-lg text-gray-700\">\n          after the click on start button, please wait the indicated time to get\n          your result\n        </p>\n      )}\n      {userReady === true ? <ChartLine userData={dummySignal} /> : <></>}\n      {bpm > 1 ? (\n        <div className=\"flex w-full \">\n          <div className=\"w-1/3 grid place-items-center  text-pink-800 bg-cyan-300 m-1 border rounded\">\n            <p className=\"text-3xl font-bold\">\n              <CountNum value={bpm} time={8} />\n            </p>\n            <h2>BPM</h2>\n          </div>\n          <div className=\"w-1/3 grid place-items-center text-green-900 bg-yellow-300 m-1 border rounded\">\n            <p className=\"text-3xl font-bold\">\n              <CountNum value={diastolic} time={8} />\n            </p>\n            <h2>diastolic</h2>\n          </div>\n          <div className=\"w-1/3 grid place-items-center   text-sky-900 bg-rose-300 m-1 border rounded\">\n            <p className=\" text-3xl font-bold\">\n              <CountNum value={systolic} time={8} />\n            </p>\n            <p>sysnolic</p>\n          </div>\n        </div>\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n};\n","import { ThirdWidget } from 'components/ThirdWidget/ThirdWidget';\n\nexport default function Third() {\n  return (\n    <>\n      <main className=\"flex justify-center\">\n        <ThirdWidget />\n      </main>\n    </>\n  );\n}\n"],"names":["ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Tooltip","ChartLine","userData","useState","signal","setSignal","label","setLabel","useEffect","setTimeout","data","map","item","elem","index","getSignal","labels","datasets","borderColor","pointBorderWidth","pointBackgroundColor","borderWidth","tension","length","options","responsive","plugins","gridLines","scales","x","display","y","ThirdWidget","userReady","setUserReady","diastolic","setDiastolic","systolic","setSystolic","bpm","setBpm","rhythm","setRhythm","showTopMenu","setShowTopMenu","className","size","color","CircleTimer","isReady","circle","type","onClick","dummyHeartRate","BloodPressure","rhythmTitle","dummySignal","CountNum","value","time","Third"],"sourceRoot":""}