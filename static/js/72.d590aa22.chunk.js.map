{"version":3,"file":"static/js/72.d590aa22.chunk.js","mappings":"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","sources":["components/Chart/HiddenChart.js","components/FirstWidget/FirstWidget.js","pages/First.js"],"sourcesContent":["import React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Tooltip,\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Tooltip\n);\n\nexport const HiddenChart = ({ userData }) => {\n  const [signal, setSignal] = useState([]);\n  const [label, setLabel] = useState([]);\n\n  useEffect(() => {\n    function getSignal() {\n      const data = userData;\n      setSignal(data.map(item => item));\n      setLabel(data.map((elem, index) => index));\n    }\n\n    getSignal();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const data = {\n    labels: label.map(item => item),\n    datasets: [\n      {\n        label: 'Signal',\n        data: signal.map(item => item),\n        borderColor: '#ea580c',\n        pointBorderWidth: 0,\n        pointBackgroundColor: 'transparent',\n        borderWidth: 0.3,\n        tension: 0.5,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {},\n    gridLines: false,\n    scales: {\n      x: {\n        grid: {\n          display: false,\n        },\n      },\n      y: {\n        grid: {\n          display: false,\n        },\n      },\n    },\n  };\n\n  return (\n    <>{signal.length > 1 && <Line data={data} options={options}></Line>}</>\n  );\n};\n","import { useState } from 'react';\nimport { FiArrowLeftCircle, FiMessageCircle } from 'react-icons/fi';\nimport { HiddenChart } from 'components/Chart/HiddenChart';\nimport { CountNum } from 'components/CountNum/CountNum';\nimport { CircleTimer } from 'components/CircleTimer/CircleTimer';\n\nimport {\n  BloodPressure,\n  dummySignal,\n  dummyHeartRate,\n  rhythmTitle,\n} from 'lib/data/measurementData';\n\nexport const FirstWidget = () => {\n  const [userReady, setUserReady] = useState(false);\n  const [diastolic, setDiastolic] = useState(0);\n  const [systolic, setSystolic] = useState(0);\n  const [bpm, setBpm] = useState(0);\n  const [rhythm, setRhythm] = useState('');\n  const [showTopMenu, setShowTopMenu] = useState(true);\n  const [chartReady, setChartReady] = useState(false);\n\n  function handleClick() {\n    setUserReady(true);\n    setShowTopMenu(false);\n    setTimeout(() => {\n      setBpm(dummyHeartRate.result);\n      setDiastolic(BloodPressure.diastolic);\n      setSystolic(BloodPressure.systolic);\n      setRhythm(rhythmTitle(dummyHeartRate.result));\n      setShowTopMenu(true);\n    }, 15000);\n  }\n\n  function showChart() {\n    setChartReady(true);\n  }\n  return (\n    <div className=\"w-360 h-640 grid place-items-center m-1 p-4  border border-solid border-lime-500/75 rounded bg-accentBg\">\n      {showTopMenu && (\n        <div className=\"w-full flex justify-between pb-2 border-b border-orange-600\">\n          <FiArrowLeftCircle size=\"30px\" color=\"#fde68a\" />\n          <FiMessageCircle size=\"30px\" color=\"#fde68a\" />\n        </div>\n      )}\n\n      {userReady === true ? (\n        <></>\n      ) : (\n        <p className=\"w-3/4 mb-2 text-center text-lg text-amber-100\">\n          Hello, to start testing, please click on the button\n        </p>\n      )}\n      {bpm > 1 ? (\n        <div>\n          {!chartReady && (\n            <button\n              type=\"button\"\n              onClick={showChart}\n              className=\"w-44 h-12 my-6  bg-orange-500/30 text-amber-100 text-lg border border-amber-300 rounded-full\"\n            >\n              Show Chart\n            </button>\n          )}\n          {chartReady && <HiddenChart userData={dummySignal} />}\n        </div>\n      ) : (\n        <></>\n      )}\n\n      <div className=\"w-full h-40 flex justify-center items-center mx-auto text-5xl font-bold text-amber-200\">\n        {rhythm.length > 1 ? (\n          <></>\n        ) : (\n          <CircleTimer isReady={userReady} circle={220} />\n        )}\n        {rhythm.length > 1 && (\n          <div className=\"w-52 h-52 p-6 bg-orange-500/30 border-2 border-orange-600 rounded-full flex items-center text-center text-xl font-normal \">\n            <p>\n              Your result is: <b>{rhythm}</b>\n            </p>\n          </div>\n        )}\n      </div>\n\n      {bpm > 1 ? (\n        <div className=\"flex w-full mt-3\">\n          <div className=\"w-24 h-24 m-1 py-3 grid place-items-center bg-orange-500/30 text-amber-100 text-sm border-2 border-amber-300 rounded-full\">\n            <h2>Heart Rate</h2>\n            <p className=\"text-2xl font-bold\">\n              <CountNum value={bpm} time={5} />\n            </p>\n            <p>BPM</p>\n          </div>\n          <div className=\"w-24 h-24 m-1 py-3  grid place-items-center bg-orange-500/30 text-amber-100 text-sm border-2 border-amber-300 rounded-full\">\n            <h2>diastolic</h2>\n            <p className=\"text-2xl font-bold\">\n              <CountNum value={diastolic} time={5} />\n            </p>\n            <h2>mm Hg</h2>\n          </div>\n          <div className=\"w-24 h-24 m-1 py-3   grid place-items-center bg-orange-500/30 text-amber-100 text-sm border-2 border-amber-300 rounded-full\">\n            <h2>systolic</h2>\n            <p className=\" text-2xl font-bold\">\n              <CountNum value={systolic} time={5} />\n            </p>\n            <p>mm Hg</p>\n          </div>\n        </div>\n      ) : (\n        <></>\n      )}\n\n      {userReady === true ? (\n        <></>\n      ) : (\n        <button\n          type=\"button\"\n          onClick={handleClick}\n          className=\"w-32 h-32 mt-12 mb-4 bg-orange-500/30 text-amber-100 text-xl border-2 border-orange-600 rounded-full\"\n        >\n          START\n        </button>\n      )}\n    </div>\n  );\n};\n","import { FirstWidget } from 'components/FirstWidget/FirstWidget';\nexport default function First() {\n  return (\n    <>\n      <main className=\"flex justify-center\">\n        <FirstWidget />\n      </main>\n    </>\n  );\n}\n"],"names":["ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Tooltip","HiddenChart","userData","useState","signal","setSignal","label","setLabel","useEffect","data","map","item","elem","index","getSignal","labels","datasets","borderColor","pointBorderWidth","pointBackgroundColor","borderWidth","tension","length","options","responsive","plugins","gridLines","scales","x","grid","display","y","FirstWidget","userReady","setUserReady","diastolic","setDiastolic","systolic","setSystolic","bpm","setBpm","rhythm","setRhythm","showTopMenu","setShowTopMenu","chartReady","setChartReady","className","size","color","type","onClick","dummySignal","CircleTimer","isReady","circle","CountNum","value","time","setTimeout","dummyHeartRate","BloodPressure","rhythmTitle","First"],"sourceRoot":""}